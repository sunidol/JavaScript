原生JS中的三大家族：offset/scroll/client

JS中的offset家族：

一、offsetWidth与offsetHeight：  console.log(box.offsetWidth);

获取的是元素的实际宽高 = width + border + padding

注意点： 
1.可以获取行内样式表及内嵌样式的宽高 
2.获取到的值是一个number类型，不带单位 
3.获取的宽高包含border和padding 
4.只能读取，不能设置

![image](https://github.com/sunidol/JavaScript/blob/JavaScript-journal/images/1.png)

二、offsetLeft与offsetTop：

offsetLeft:获取自己左外边框与offsetParent的左内边框的距离

offsetTop:获取自己上外边框与offsetParent的上内边框的距离

![image](https://github.com/sunidol/JavaScript/blob/JavaScript-journal/images/2.png)

三、offsetParent:获取最近的定位父元素 （自己定位参照的父元素）

注意点： 
1.如果元素自身是固定定位（fixed），则定位父级是null 
2.如果元素自身是非固定定位,并且所有的父元素都没有定位，那么他的定位父级是body 
3.body的定位父级是null

jQuery中获取宽高的方法:

一、width()/height()方法：

获取到的是内容的宽高，即width/height

注意点： 
1.获取到的就是内容的宽高,不带px的number类型的值. 
2.获取不传参 
3.传参代表的是设置内容的宽高

//例子：模拟响应式布局.
      $(window).on('resize', function () {
        if($(this).width() > 1200){
          $('body').css('backgroundColor','red');
        }else if($(this).width() > 900){
          $('body').css('backgroundColor','yellow');
        }
        else if($(this).width() > 600){
          $('body').css('backgroundColor','pink');
        }else if($(this).width() > 400){
          $('body').css('backgroundColor','green');
        }else {
          $('body').css('backgroundColor','white');
        }
      });
      
二、innerWidth()/innerHeight()方法：

获取到的是内容的宽高+padding 

注意点： 
1.获取到的就是内容+padding的宽高,不带px的number类型的值
2.获取不传参 
3.传参代表的是设置内容的宽高，但是注意这里不会改变border的大小

三、outerWidth()/outerHeight()方法：

获取到的是内容+padding+border+margin 的宽高

注意点： 
1.获取到的是内容+padding+border+margin 的宽高
2.不传参代表的是获取获取到的是内容+padding+border 的宽高
3.传的参数是true，获取到的是内容+padding+border+margin 的宽高

四、获取页面可视区的宽高

1、宽度：$(window).width()
2、高度：$(window).height()

